[
  {
    "key": "ctrl+cmd+s",
    "command": "workbench.action.files.saveWithoutFormatting",
    "description": "VS Code should lint and fix first, then format.  Sometimes this does not work correctly or the formatting introduces something wrong.  This command can save the day, as it saves your work without formatting.  This gives you the flexibility to put the file into version control."
  },
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "ctrl+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/",
"description": "This is helpful when in a file and you quickly need to see who worked on a line last and when it was.",
  },
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
  },"description": "This is helpful to switch back to the project's file structure.",
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "ctrl+alt+[",
    "command": "cursorColumnSelectLeft",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+]",
    "command": "cursorColumnSelectRight",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+left",
    "command": "cursorWordPartLeft",
    "when": "textInputFocus",
"description": "Vital Shortcut for quickly NAVIGATING horizontally through a line by word which is much faster than by character.",
  },
  {
    "key": "alt+shift+left",
    "command": "cursorWordPartLeftSelect",
    "when": "textInputFocus"
"description": "Vital Shortcut for quickly SELECTING horizontal through a line by word.",
  },
  {
    "key": "ctrl+right",
    "command": "cursorWordPartRight",
    "when": "textInputFocus"
  },
  {
    "key": "alt+shift+right",
    "command": "cursorWordPartRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+5",
    "command": "workbench.view.debug"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug"
  },
  {
    "key": "shift+cmd+d",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
"description": "TODO",
  },
  {
    "key": "shift+cmd+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
"description": "",
  },
  {
    "key": "cmd+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
"description": "Frequent Shortcut for quickly killing the line you are on.  You can be anywhere on the line.",
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+f4",
    "command": "-references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "cmd+backspace",
    "command": "editor.emmet.action.removeTag"
"description": "Occasional shortcut for deleting the opening and closing tag that you are currently within.  Helpful when you have a div tag that has s dozens of lines between the opening and closing tags.",
  },
  {
    "key": "cmd+r",
    "command": "editor.emmet.action.updateTag",
"description": "Occasional shortcut for changing an HTML tag at the same time.  IE: Switching a div tag to a sidebar tag.",
  },
  {
    "key": "alt+down",
    "command": "spaceBlockJumper.moveDown",
"description": "Frequent Shortcut used to quickly NAVIGATE DOWN by blocks, functions, brackets, etc.  IE: In a long file, you don't want to jump down to the bottom of the page but need to scan dozens of blocks quickly.",
  },
  {
    "key": "alt+up",
    "command": "spaceBlockJumper.moveUp",
"description": "Frequent Shortcut used to quickly NAVIGATE UP by blocks, functions, brackets, etc.  IE: In a long file, you don't want to jump up to the bottom of the page but need to scan dozens of blocks quickly.",
  },
  {
    "key": "shift+alt+down",
    "command": "spaceBlockJumper.selectDown",
    "description": "Frequent Shortcut used to quickly SELECT DOWN on block(s), functions, brackets, etc.  IE: In a long file, you don't want to jump down to the bottom of the page but need to select multiple blocks of code, quickly.",
  },
  {
    "key": "shift+alt+up",
    "command": "spaceBlockJumper.selectUp",
    "description": "Frequent Shortcut used to quickly SELECT UP on block(s), functions, brackets, etc.  IE: In a long file, you don't want to jump up to the bottom of the page but need to select multiple blocks of code, quickly.",
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "cmd+j",
    "command": "editor.emmet.action.matchTag",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+j",
    "command": "editor.emmet.action.splitJoinTag",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+m",
    "command": "editor.emmet.action.matchTag",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+shift+j",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+[",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+j",
    "command": "-liveshare.join",
    "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
  },
  {
    "key": "cmd+i",
    "command": "editor.emmet.action.balanceIn"
  },
  {
    "key": "shift+cmd+i",
    "command": "editor.emmet.action.balanceOut"
  },
  {
    "key": "cmd+n",
    "command": "diffMerge.nextDiff",
    "when": "diffMerge.panelFocused"
  },
  {
    "key": "alt+f5",
    "command": "-diffMerge.nextDiff",
    "when": "diffMerge.panelFocused"
  },
  {
    "key": "shift+alt+f5",
    "command": "-diffMerge.prevDiff",
    "when": "diffMerge.panelFocused"
  },
  {
    "key": "ctrl+i",
    "command": "toggle.diff.ignoreTrimWhitespace"
  },
  {
    "key": "ctrl+i",
    "command": "l13Diff.ignoreWhitespace"
  },
  {
    "key": "cmd+f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "cmd+f",
    "command": "actions.find"
  },
  {
    "key": "alt+cmd+x",
    "command": "-l13Diff.action.search.toggleFindConflicts",
    "when": "l13DiffFocus"
  },
  {
    "key": "alt+cmd+d",
    "command": "-l13Diff.action.search.toggleFindFolders",
    "when": "l13DiffFocus"
  },
  {
    "key": "alt+cmd+o",
    "command": "-l13Diff.action.search.toggleFindOthers",
    "when": "l13DiffFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "-l13Diff.action.search.toggleFindSymbolicLinks",
    "when": "l13DiffFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "-l13Diff.action.search.toggleFindRegularExpression",
    "when": "l13DiffFocus && l13DiffSearchFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "cmd+e",
    "command": "expand_region",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-expand_region",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+e",
    "command": "undo_expand_region",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-undo_expand_region",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+e",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+e",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+t",
    "command": "editor.emmet.action.wrapWithAbbreviation",
    "when": "editorTextFocus && !editorReadonly"
  }
]
