[
  {
    "key": "cmd+f",
    "command": "actions.find",
    "when": "*",
    "frequency": "Frequent",
    "description": "Use for finding a string within a file.",
    "default": true
  },
  {
    "key": "cmd+shift+f",
    "command": "workbench.action.findInFiles",
    "when": "*",
    "frequency": "Frequent",
    "description": "to find ANY string across all files within the VS Code project.",
    "default": true
  },
  {
    "key": "cmd+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used when searching for selected text, this command will ADD the next occurrence to your selected text.",
    "example": "If I wanted to find all references of the description key in this JSON array, I would first type cmd+f then type description and hit enter.  Then, by hitting cmd+d multiple times it would add each new occurrence to my selection.  At the end, you can begin typing and navigation the same commands for each occurrence simultaneously.",
    "default": true
  },
  {
    "key": "cmd+alt+d",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used when searching for selected text, this command will ADD ALL matching strings within the file.  The difference between this and cmd+d is does not select one match at a time, it will highlight them all in one fell swoop.",
    "example": "If I wanted to find and select ALL references of the -description- key in this file, I would first type cmd+f then type description and hit enter.  By hitting cmd+alt+d once, it will add all matching occurrence of the word -description- to my selection.  You can now begin typing a replacement and will will be changed simultaneously.",
    "default": true
  },
  {
    "key": "shift+cmd+d",
    "command": "editor.action.moveSelectionToPreviousFindMatch",
    "when": "editorFocus && editorHasSelection",
    "frequency": "Frequent",
    "description": "Used when searching for selected text, this command will REMOVE the previous occurrence from your selected text.",
    "example": "If I wanted to find all references of the description key in this JSON array, I would first type cmd+f then type description and hit enter.  Then, if I select one too many cmd+d, I can use this command to subtract the last occurence.",
    "default": false
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.gotoLine",
    "when": "editorFocus && editorHasSelection",
    "frequency": "Occasional",
    "description": "Shortcut for quickly jumping directly to a line number.",
    "tips": "When using the Cmd+P shortcut to jump directly to a file, you can add :XXX at the end of the file name and not only jump into that file but directly to that line.",
    "default": true
  },
  {
    "key": "alt+shift+left",
    "command": "cursorWordPartStartLeftSelect",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "For quickly SELECTING horizontally forwards through a line by word.",
    "example": "If you are trying to cut the first two sentences out of a paragraph of copy, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "alt+shift+right",
    "command": "cursorWordPartRightSelect",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "For quickly SELECTING horizontally backwards through a line by word.",
    "example": "If you are trying to cut the first two sentences out of a paragraph of copy, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "alt+up",
    "command": "spaceBlockJumper.moveUp",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used to quickly NAVIGATE UP by blocks, functions, brackets, etc.  IE: In a long file, you don't want to jump up to the bottom of the page but need to scan dozens of blocks quickly.",
    "example": " In a long file, you don't want to jump UP to the top of the page but need to scan dozens of blocks quickly.",
    "default": false
  },
  {
    "key": "alt+down",
    "command": "spaceBlockJumper.moveDown",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used to quickly NAVIGATE DOWN by blocks, functions, brackets, etc.",
    "example": " In a long file, you don't want to jump down to the bottom of the page but need to scan dozens of blocks quickly.",
    "default": false
  },
  {
    "key": "shift+alt+up",
    "command": "spaceBlockJumper.selectUp",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used to quickly SELECT UP on block(s), functions, brackets, etc.",
    "example": "Used to quickly SELECT UP on block(s), functions, brackets, etc.  IE: In a long file, you don't want to jump down to the bottom of the page but need to select multiple blocks of code, quickly.",
    "default": false
  },
  {
    "key": "shift+alt+down",
    "command": "spaceBlockJumper.selectDown",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used to quickly SELECT DOWN on block(s), functions, brackets, etc.",
    "example": "Used to quickly SELECT UP on block(s), functions, brackets, etc.  IE: In a long file, you don't want to jump down to the top of the page but need to select multiple blocks of code, quickly.",
    "default": false
  },
  {
    "key": "ctrl+alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Frequent",
    "description": "for quickly moving the current line UP to the next line.  It will move whatever was on that line below.",
    "example": "This works while having content selected as well, making it very handy to move blocks, components, groups of styles, further UP in the file.",
    "default": false
  },
  {
    "key": "ctrl+alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Frequent",
    "description": "for quickly moving the current line DOWN to the next line.  It will move whatever was on that line below.",
    "example": "This works while having content selected as well, making it very handy to move blocks, components, groups of styles, further DOWN in the file."
  },
  {
    "key": "cmd+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly",
    "frequency": "Frequent",
    "description": "for quickly killing the line you are on.  You can be anywhere on the line.",
    "example": "Useful for removing a simple var declaration.",
    "default": false
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.closeEditorsInGroup",
    "when": "editorTextFocus",
    "frequency": "Frequent",
    "description": "For quickly killing all editor tabs that are active in the editor group.",
    "example": "After debugging an issue, you have thirty tabs open.  This closes them all immediately.",
    "default": false
  },

  {
    "key": "cmd+u",
    "command": "cursorUndo",
    "frequency": "Frequent",
    "description": "for quickly undoing an erronous position change to your cursor.",
    "example": "You are jumping down instances of a string and go to far, this command can bring you back to the last known cursor position."
  },
  {
    "key": "shift+cmd+u",
    "command": "cursorRedo",
    "frequency": "Frequent",
    "description": "for quickly redoing your cursor position.",
    "example": "You are jumping down instances of a string and thought you went too far but need to redo, this command can bring you back to the furthest known cursor position."
  },
  {
    "key": "cmd+e",
    "command": "expand_region",
    "when": "editorTextFocus",
    "frequency": "Frequent",
    "description": "Used to expand your selection in a smart way.  With each subsequent triggering of the shortcut, it will increase the selection to the current selections parent, then its parent, and so on.  NOTE: This uses the extension expand region and is much more reliable across languages."
  },
  {
    "key": "cmd+shift+e",
    "command": "undo_expand_region",
    "when": "editorHasSelection && editorTextFocus",
    "frequency": "Frequent",
    "description": "Used to shrink your selection in a smart way.  With each subsequent triggering of the shortcut, it will decrease the selection to the current selections child, then its child, and so on.  NOTE: This uses the Expand Region extension and is much more reliable across languages."
  },
  {
    "key": "cmd+backspace",
    "command": "editor.emmet.action.removeTag",
    "frequency": "Occasional",
    "description": "Shortcut for deleting the opening and closing tag that you are currently within.  Helpful when you have a div tag that has s dozens of lines between the opening and closing tags."
  },
  {
    "key": "cmd+r",
    "command": "editor.emmet.action.updateTag",
    "frequency": "Occasional",
    "description": "Shortcut for changing an HTML tag at the same time.  IE: Switching a div tag to a sidebar tag."
  },
  {
    "key": "shift+cmd+k",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Occasional",
    "description": "Shortcut used for duplicating the current lines content on the next line.  IE: If you know you are going to need three variables with similar values, you can use this."
  },
  {
    "key": "cmd+j",
    "command": "editor.emmet.action.matchTag",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Occasional",
    "description": "Shortcut used to quickly jump to the opposing start or end tag.",
    "example": "Within an html file, you want to quickly jump down two hundred lines to the closing div tag."
  },

  {
    "key": "cmd+l",
    "command": "editor.emmet.action.splitJoinTag",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+t",
    "command": "editor.emmet.action.wrapWithAbbreviation",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Occasional",
    "description": "Shortcut for using Emmet abbreviation to create an element around a selected block.",
    "example": "Within an html file you want to quickly add a div.row around a bootstrap div.col class with a bunch of content within it."
  },
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "description": "This is helpful to switch back to the project's file structure.",
    "default": true
  },
  {
    "key": "cmd+5",
    "command": "workbench.view.debug",
    "frequency": "Infrequent",
    "description": "Used to quickly open the debug console panel.",
    "experimental": true
  },
  {
    "key": "ctrl+e",
    "command": "workbench.view.explorer",
    "description": "This is helpful to switch back to the project's file structure.",
    "default": true
  },
  {
    "key": "cmd+shift+j",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled",
    "experimental": true
  },
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "editorTextFocus || textCompareEditorVisible",
    "description": "When reviewing diffs within the source control sidebar, this shortcut quickly navigates to the next changed block.",
    "example": "If I have three changes to this keybindings file, this shortcut allows to quickly jump hundreds of lines in some cases, directly to the next change."
  },
  {
    "key": "ctrl+shift+down",
    "command": "diffMerge.nextDiff",
    "when": "diffMerge.panelFocused"
  },
  {
    "key": "ctrl+shift+up",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "editorTextFocus || textCompareEditorVisible",
    "description": "When reviewing diffs within the source control sidebar, this shortcut quickly navigates back to the previous changed block.",
    "example": "If I have three changes to this keybindings file, this shortcut allows to quickly jump back up hundreds of lines in some cases, directly to the previous change you were reviewing."
  },
  {
    "key": "ctrl+shift+up",
    "command": "diffMerge.prevDiff",
    "when": "diffMerge.panelFocused"
  },
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/",
    "description": "This is helpful when in a file and you quickly need to see who worked on a line last and when it was."
  },
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "ctrl+shift+cmd+left",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus",
    "frequency": "Infrequent",
    "description": "Used when the expand region extension shortcuts do not select the correctly expanded or contracted region.  I am leaving this in here until it is determined that the expand region extension does all expanding/contracting better.",
    "experimental": true
  },
  {
    "key": "ctrl+shift+cmd+right",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus",
    "frequency": "Infrequent",
    "description": "Used when the expand region extension shortcuts do not select the correctly expanded or contracted region.  I am leaving this in here until it is determined that the expand region extension does all expanding/contracting better.",
    "experimental": true
  },
  {
    "key": "ctrl+shift+up",
    "command": "merge-conflict.previous",
    "description": "During a merge conflict, this allows you to quickly navigate to the PREVIOUS merge conflict in the file.",
    "example": "You are merging in staging changes and there are 1000 lines between the current conflict and the previous one.  This will quickly jump you UP to it."
  },
  {
    "key": "ctrl+shift+down",
    "command": "merge-conflict.next",
    "description": "During a merge conflict, this allows you to quickly navigate to the NEXT merge conflict in the file.",
    "example": "You are merging in staging changes and there are 1000 lines between the current conflict and the next one.  This will quickly jump you DOWN to it."
  },
  {
    "key": "ctrl+shift+z",
    "command": "merge-conflict.accept.current",
    "description": "During a merge conflict, this allows you to quickly accept your current changes over what is attempting to be merged in.",
    "example": "You are merging in staging changes and want to take those over your own.  You can execute this keybindings and it will select the changes listed below your current code."
  },
  {
    "key": "ctrl+shift+x",
    "command": "merge-conflict.accept.incoming",
    "description": "During a merge conflict, this allows you to quickly accept the incoming change.",
    "example": "You are merging in staging changes and want to take those over your own.  You can execute this keybindings and it will select the changes listed below your current code."
  },
  {
    "key": "cmd+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "*",
    "description": "To ensure the pasting behavior is uniform across everything, the when value here is set to all situations."
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug"
  },
  {
    "key": "shift+cmd+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus",
    "description": "IMPORTANT: All key bindings where the command value is prefixed with a hyphen (like this one).  You can safely ignore.  These are just to clear up any conflicts with the keybindings above."
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "ctrl+w",
    "command": "-expand_region",
    "when": "editorTextFocus",
    "frequency": "Frequent",
    "description": "Used to shrink your selection in a smart way.  With each subsequent triggering of the shortcut, it will decrease the selection to the current selections child, then its child, and so on.  NOTE: This uses the Expand Region extension and is much more reliable across languages.",
    "experimental": true
  },
  {
    "key": "ctrl+shift+w",
    "command": "-undo_expand_region",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "shift+alt+]",
    "command": "cursorColumnSelectRight",
    "when": "editorTextFocus",
    "experimental": true
  },
  {
    "key": "cmd+k cmd+[",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled",
    "description": "This command folds the current block you are on and all blocks within it.  It requires that folding is enabled.",
    "experimental": true
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "editorTextFocus || textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "editorTextFocus || textCompareEditorVisible"
  },
  {
    "key": "ctrl+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/",
    "description": "This is helpful when in a file and you quickly need to see who worked on a line last and when it was."
  },
  {
    "key": "shift+f4",
    "command": "-references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "cmd+i",
    "command": "-editor.emmet.action.balanceIn",
    "frequency": "Occasional",
    "description": "Shortcut for smart selecting inward.  By smart, I mean it selects all of a tag, then the child tag within that.  The drawback is this emmet keybinding only works with a few different languages. NOTE: You will first need to have content selected with a child for this shortcut to work.",
    "experimental": true
  },
  {
    "key": "shift+cmd+i",
    "command": "-editor.emmet.action.balanceOut",
    "frequency": "Occasional",
    "description": "Shortcut for smart selecting outward.  By smart, I mean it selects all of a tag, then the parent tag above that.  The drawback is this emmet keybinding only works with a few different languages.",
    "experimental": true
  },
  {
    "key": "cmd+v",
    "command": "-editor.action.clipboardPasteAction"
  }
]
