[
  {
    "key": "cmd+f",
    "command": "actions.find",
    "when": "*",
    "frequency": "Frequent",
    "description": "Use for finding a string within a file.",
    "example": "You are looking for all references of the string - exampleVar - in the current file.  This will display a search bar in the top right of the editor listing out how many references there are.",
    "default": true
  },
  {
    "key": "cmd+shift+f",
    "command": "workbench.action.findInFiles",
    "when": "*",
    "frequency": "Frequent",
    "description": "to find ANY string across all files within the VS Code project.",
    "example": "You are looking for all references of the string - exampleVar - This allows you to search through all the files in the workspace and view them.",
    "default": true
  },
  {
    "key": "cmd+d",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used when searching for selected text, this command will ADD the next occurrence to your selected text.",
    "example": "If I wanted to find all references of the description key in this JSON array, I would first type cmd+f then type description and hit enter.  Then, by hitting cmd+d multiple times it would add each new occurrence to my selection.  At the end, you can begin typing and navigation the same commands for each occurrence simultaneously.",
    "default": true
  },
  {
    "key": "cmd+alt+d",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used when searching for selected text, this command will ADD ALL matching strings within the file.  The difference between this and cmd+d is does not select one match at a time, it will highlight them all in one fell swoop.",
    "example": "If I wanted to find and select ALL references of the -description- key in this file, I would first type cmd+f then type description and hit enter.  By hitting cmd+alt+d once, it will add all matching occurrence of the word -description- to my selection.  You can now begin typing a replacement and will will be changed simultaneously.",
    "default": true
  },
  {
    "key": "shift+cmd+d",
    "command": "editor.action.moveSelectionToPreviousFindMatch",
    "when": "editorFocus && editorHasSelection",
    "frequency": "Frequent",
    "description": "Used when searching for selected text, this command will REMOVE the previous occurrence from your selected text.",
    "example": "If I wanted to find all references of the description key in this JSON array, I would first type cmd+f then type description and hit enter.  Then, if I select one too many cmd+d, I can use this command to subtract the last ocurrence.",
    "default": false
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.gotoLine",
    "when": "editorFocus && editorHasSelection",
    "frequency": "Occasional",
    "description": "Shortcut for quickly jumping directly to a line number.",
    "example": "When using the Cmd+P shortcut to jump directly to a file, you can add :XXX at the end of the file name and not only jump into that file but directly to that line.",
    "default": true
  },
  {
    "key": "alt+left",
    "command": "cursorWordLeft",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "For quickly NAVIGATING horizontally to the left through a line, word by word.",
    "example": "If you are trying to navigate through the first two sentences out of a paragraph, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "alt+right",
    "command": "cursorWordRight",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "For quickly NAVIGATING horizontally to the right through a line, word by word.",
    "example": "If you are trying to navigate through the first two sentences out of a paragraph, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "ctrl+alt+left",
    "command": "cursorWordPartStartLeft",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "For quickly NAVIGATING horizontally to the left through a line, word by word.",
    "example": "If you are trying to navigate through the first two sentences out of a paragraph, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "ctrl+alt+right",
    "command": "cursorWordPartRight",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "For quickly NAVIGATING horizontally to the right through a line, word by word.",
    "example": "If you are trying to navigate through the first two sentences out of a paragraph, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "alt+shift+left",
    "command": "cursorWordStartLeftSelect",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "for quickly SELECTING horizontally backwards through a line by word.",
    "example": "If you are trying to cut the first two sentences out of a paragraph of copy, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "alt+shift+right",
    "command": "cursorWordRightSelect",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "For quickly SELECTING horizontally through a line by word.",
    "example": "If you are trying to cut the first two sentences out of a paragraph of copy, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "alt+up",
    "command": "spaceBlockJumper.moveUp",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used to quickly NAVIGATE UP by blocks, functions, brackets, etc.  IE: In a long file, you don't want to jump up to the bottom of the page but need to scan dozens of blocks quickly.",
    "example": " In a long file, you don't want to jump UP to the top of the page but need to scan dozens of blocks quickly.",
    "default": false
  },
  {
    "key": "alt+down",
    "command": "spaceBlockJumper.moveDown",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used to quickly NAVIGATE DOWN by blocks, functions, brackets, etc.",
    "example": " In a long file, you don't want to jump down to the bottom of the page but need to scan dozens of blocks quickly.",
    "default": false
  },
  {
    "key": "shift+alt+up",
    "command": "spaceBlockJumper.selectUp",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used to quickly SELECT UP on block(s), functions, brackets, etc.",
    "example": "In a long file, you don't want to jump up to the bottom of the page but need to select multiple blocks of code, quickly.",
    "default": false
  },
  {
    "key": "shift+alt+down",
    "command": "spaceBlockJumper.selectDown",
    "when": "editorFocus",
    "frequency": "Frequent",
    "description": "Used to quickly SELECT DOWN on block(s), functions, brackets, etc.",
    "example": "In a long file, you don't want to jump down to the bottom of the page but need to select multiple blocks of code, quickly.",
    "default": false
  },
  {
    "key": "ctrl+alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Frequent",
    "description": "For quickly moving the current line UP to the previous line and what was on that previous line will then move to the next line. This works while having content selected as well, making it very handy to move entire blocks, components, groups of styles, etc. (Not just a single line) further UP in the file.",
    "example": "You realize a javascript variable was instantiated in a function when it should be in the next function UP.  Executing this shortcut will move it UP a line into the function where it should be instantiated.",
    "default": false
  },
  {
    "key": "ctrl+alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Frequent",
    "description": "For quickly moving the current line DOWN to the next line and what was on that next line will then move to the previous line. This works while having content selected as well, making it very handy to move entire blocks, components, groups of styles, etc. (Not just a single line) further DOWN in the file.",
    "example": "You realize a javascript variable was instantiated in the global scope.  Executing this shortcut will move it down a line into the function where it should be instantiated.",
    "default": false
  },
  {
    "key": "cmd+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly",
    "frequency": "Frequent",
    "description": "for quickly killing the line you are on.  You can be anywhere on the line.",
    "example": "Useful for removing a simple var declaration.",
    "default": false
  },
  {
    "key": "cmd+u",
    "command": "workbench.action.chat.startVoiceChat",
    "when": "!voiceChatInProgress"
  },
  {
    "key": "cmd+u",
    "command": "workbench.action.chat.stopListeningAndSubmit",
    "when": "voiceChatInProgress"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.closeEditorsInGroup",
    "when": "editorFocus",
    "frequency": "Occasionally",
    "description": "This will close all saved editor tabs within your current workspace.",
    "example": "You were debugging a problem and ended up opening 23 tabs.  This will close all them so you can reopen the one file that matters",
    "default": false
  },
  {
    "key": "cmd+u",
    "command": "cursorUndo",
    "frequency": "Frequent",
    "when": "*",
    "description": "For quickly undoing an erronous position change to your cursor.",
    "example": "You are jumping down instances of a string and go to far, this command can bring you back to the last known cursor position.",
    "default": false
  },
  {
    "key": "shift+cmd+u",
    "command": "cursorRedo",
    "frequency": "Frequent",
    "when": "*",
    "description": "for quickly redoing your cursor position.",
    "example": "You are jumping down instances of a string and thought you went too far but need to redo, this command can bring you back to the furthest known cursor position.",
    "default": false
  },
  {
    "key": "cmd+e",
    "command": "expand_region",
    "when": "editorTextFocus",
    "frequency": "Frequent",
    "description": "Used to expand your selection in a smart way.  With each subsequent triggering of the shortcut, it will increase the selection to the current selections parent, then its parent, and so on.  NOTE: This uses the extension expand region and is much more reliable across languages.",
    "example": "Very useful for expanding in single clicks, everything within a tag, object, or function.  For instance, if you have a DIV soup and you want to make sure you kill the text and all the required divs.",
    "default": false
  },
  {
    "key": "cmd+shift+e",
    "command": "undo_expand_region",
    "when": "editorHasSelection && editorTextFocus",
    "frequency": "Frequent",
    "description": "Used to shrink your selection in a smart way.  With each subsequent triggering of the shortcut, it will decrease the selection to the current selections child, then its child, and so on.  NOTE: This uses the Expand Region extension and is much more reliable across languages.",
    "example": "Very useful if the expansion goes one level too far, this allows you to shrink it one level.",
    "default": false
  },
  {
    "key": "cmd+shift+backspace",
    "command": "editor.emmet.action.removeTag",
    "frequency": "Occasional",
    "when": "editorFocus",
    "description": "Shortcut for deleting the opening and closing tag that you are currently within.",
    "example": "Helpful when you have a div tag that has s dozens of lines between the opening and closing tags.",
    "default": false
  },
  {
    "key": "cmd+r",
    "command": "editor.emmet.action.updateTag",
    "frequency": "Occasional",
    "when": "*",
    "description": "Shortcut for changing an HTML tag at the same time.",
    "example": "IE: Switching a div tag to a sidebar tag.",
    "default": false
  },
  {
    "key": "shift+cmd+k",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Occasional",
    "description": "Shortcut used for duplicating the current lines content on the next line.  IE: If you know you are going to need three variables with similar values, you can use this.",
    "default": false
  },
  {
    "key": "cmd+j",
    "command": "editor.emmet.action.matchTag",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Occasional",
    "description": "Shortcut used to quickly jump to the opposing start or end tag.",
    "example": "Within an html file, you want to quickly jump down two hundred lines to the closing div tag.",
    "default": false
  },
  {
    "key": "cmd+t",
    "command": "editor.emmet.action.wrapWithAbbreviation",
    "when": "editorTextFocus && !editorReadonly",
    "frequency": "Occasional",
    "description": "Shortcut for using Emmet abbreviation to create an element around a selected block.",
    "example": "Within an html file you want to quickly add a div.row around a bootstrap div.col class with a bunch of content within it.",
    "default": true
  },
  {
    "key": "ctrl+cmd+s",
    "command": "workbench.action.files.saveWithoutFormatting",
    "when": "*",
    "frequency": "Occasional",
    "description": "This command is helpful when unintended formatting is applied to a file.  Saving without formatting allows for you to troubleshoot if the problem resides on the save/linting side or the formatting side.",
    "example": "While updating a YML file, you save and notice that a new value is incorrectly indented.  By using this command, you realize that the formatter is set to bash scripts instead of YML.",
    "default": true
  },
  {
    "key": "shift+cmd+1",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled",
    "frequency": "Occasional",
    "description": "This is helpful to switch back to the project's file structure.",
    "example": "Say you are looking for a specific image, after clicking in one file in an images/ folder, use this shortcut to quickly jump back to the folder you were just in.  The down and up arrow keys allow you to navigate through the files.  Each one can be quickly opened with spacebar.",
    "default": true
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.splitEditorRight",
    "when": "editorFocus",
    "frequency": "Occasional",
    "description": "Used to split your current editor in half, leaving the previously opened file in a separate editor group.  This command will open the new group to the LEFT of the active editor.  Think of it as the HORIZONTAL splitter.",
    "example": "You want to compare two similar files side by side.  Useful when on a traditional wide-screen monitor.",
    "default": false
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.splitEditorDown",
    "when": "editorFocus",
    "description": "Used to split your current editor in half, leaving the previously opened file in a separate editor group.  This command will open the new group BELOW the active editor.  Think of it as the VERTICAL splitter.",
    "example": "You want to compare two similar files side by side.  Useful when on a non-traditional monitor turned vertically long.",
    "default": false
  },
  {
    "key": "ctrl+5",
    "command": "workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled",
    "description": "Quickly focuses or opens the debug panel.",
    "example": "Say you are looking for a specific image, after clicking in one file in an images/ folder, use this shortcut to quickly jump back to the folder you were just in.  The down and up arrow keys allow you to navigate through the files.  Each one can be quickly opened with spacebar.",
    "default": false
  },
  {
    "key": "ctrl+shift+down",
    "command": "diffMerge.nextDiff",
    "when": "diffMerge.panelFocused",
    "description": "When reviewing diffs within the source control sidebar, this shortcut quickly navigates to the NEXT changed block.",
    "example": "If I have three diff/merge changes to this keybindings file, this shortcut allows to quickly jump hundreds of lines in some cases, directly to the next change."
  },
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible",
    "description": "When reviewing diffs within the source control sidebar, this shortcut quickly navigates to the NEXT changed block.",
    "example": "If I have three diff/merge changes to this keybindings file, this shortcut allows to quickly jump hundreds of lines in some cases, directly to the next change.",
    "default": false
  },
  {
    "key": "ctrl+shift+down",
    "command": "merge-conflict.next",
    "when": "*",
    "description": "During a merge conflict, this allows you to quickly navigate to the NEXT merge conflict in the file.",
    "example": "You are merging in staging changes and there are 1000 lines between the current conflict and the next one.  This will quickly jump you DOWN to it.",
    "default": true
  },
  {
    "key": "ctrl+shift+up",
    "command": "diffMerge.prevDiff",
    "when": "diffMerge.panelFocused",
    "description": "When reviewing diffs within the source control sidebar, this shortcut quickly navigates to the PREVIOUSLY changed block.",
    "example": "If I have three changes to this keybindings file, this shortcut allows to quickly jump hundreds of lines in some cases, directly to the PREVIOUS change.",
    "default": false
  },
  {
    "key": "ctrl+shift+up",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible",
    "description": "When reviewing diffs within the source control sidebar, this shortcut quickly navigates to the PREVIOUSLY changed block.",
    "example": "If I have three diff/merge changes to this keybindings file, this shortcut allows to quickly jump hundreds of lines in some cases, directly to the PREVIOUS change.",
    "default": false
  },
  {
    "key": "ctrl+shift+up",
    "command": "merge-conflict.previous",
    "when": "*",
    "description": "During a merge conflict, this allows you to quickly navigate to the PREVIOUS merge conflict in the file.",
    "example": "You are merging in staging changes and there are 1000 lines between the current conflict and the previous one.  This will quickly jump you UP to it.",
    "default": false
  },
  {
    "key": "ctrl+shift+z",
    "command": "merge-conflict.accept.current",
    "when": "*",
    "description": "During a merge conflict, this allows you to quickly accept your current changes over what is attempting to be merged in.",
    "example": "You are merging in staging changes and want to take those over your own.  You can execute this keybindings and it will select the changes listed below your current code.",
    "default": false
  },
  {
    "key": "ctrl+shift+x",
    "command": "merge-conflict.accept.incoming",
    "when": "*",
    "description": "During a merge conflict, this allows you to quickly accept the incoming change.",
    "example": "You are merging in staging changes and want to take those over your own.  You can execute this keybindings and it will select the changes listed below your current code."
  },
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/",
    "description": "This is helpful when in a file and you quickly need to see who worked on a line last and when it was.",
    "example": "Toggle this to quickly scan who did what in a file, when, and their commit message.",
    "default": false
  },
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/",
    "example": "Toggling this, after the above command allows you drill in on a specific line change and see the history even before the latest change."
  },
  {
    "key": "ctrl+b",
    "command": "gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "cmd+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "*",
    "description": "To ensure the pasting behavior is uniform across everything, the when value here is set to all situations.",
    "example": "When an input field is active is certain panes, this ensures you can paste even from the global clipboard."
  },
  {
    "key": "shift+cmd+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus",
    "description": "IMPORTANT: All key bindings where the command value is prefixed with a hyphen (like this one).  You can safely ignore.  These are just to clear up any conflicts with the keybindings above."
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "shift+cmd+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "ctrl+w",
    "command": "-expand_region",
    "when": "editorTextFocus",
    "frequency": "Frequent",
    "description": "Used to shrink your selection in a smart way.  With each subsequent triggering of the shortcut, it will decrease the selection to the current selections child, then its child, and so on.  NOTE: This uses the Expand Region extension and is much more reliable across languages.",
    "experimental": true
  },
  {
    "key": "ctrl+shift+w",
    "command": "-undo_expand_region",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "cmd+k cmd+[",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled",
    "description": "This command folds the current block you are on and all blocks within it.  It requires that folding is enabled."
  },
  {
    "key": "shift+cmd+g",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "editorTextFocus || textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "editorTextFocus || textCompareEditorVisible"
  },
  {
    "key": "ctrl+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/",
    "description": "This is helpful when in a file and you quickly need to see who worked on a line last and when it was."
  },
  {
    "key": "shift+f4",
    "command": "-references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "cmd+i",
    "command": "-editor.emmet.action.balanceIn",
    "frequency": "Occasional",
    "description": "Shortcut for smart selecting inward.  By smart, I mean it selects all of a tag, then the child tag within that.  The drawback is this emmet keybinding only works with a few different languages. NOTE: You will first need to have content selected with a child for this shortcut to work.",
    "experimental": true
  },
  {
    "key": "shift+cmd+i",
    "command": "-editor.emmet.action.balanceOut",
    "frequency": "Occasional",
    "description": "Shortcut for smart selecting outward.  By smart, I mean it selects all of a tag, then the parent tag above that.  The drawback is this emmet keybinding only works with a few different languages.",
    "experimental": true
  },
  {
    "key": "cmd+v",
    "command": "-editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+alt+left",
    "command": "cursorWordPartStartLeft",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "For quickly NAVIGATING horizontally to the left through a line, word by word.",
    "example": "If you are trying to navigate through the first two sentences out of a paragraph, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "ctrl+alt+right",
    "command": "cursorWordPartRight",
    "when": "textInputFocus",
    "frequency": "Frequent",
    "description": "For quickly NAVIGATING horizontally to the right through a line, word by word.",
    "example": "If you are trying to navigate through the first two sentences out of a paragraph, using this shortcut will drastically speed up the process.",
    "default": true
  },
  {
    "key": "ctrl+cmd+s",
    "command": "workbench.action.files.saveWithoutFormatting",
    "when": "*",
    "frequency": "Occasional",
    "description": "This command is helpful when unintended formatting is applied to a file.  Saving without formatting allows for you to troubleshoot if the problem resides on the save/linting side or the formatting side.",
    "example": "While updating a YML file, you save and notice that a new value is incorrectly indented.  By using this command, you realize that the formatter is set to bash scripts instead of YML.",
    "default": true
  },
  {
    "key": "cmd+k s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+e",
    "command": "-cursorLineEnd",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+2",
    "command": "atlascode.showExploreSettings"
  },
  {
    "key": "alt+cmd+i",
    "command": "workbench.action.chat.open",
    "when": "hasChatProvider"
  },
  {
    "key": "ctrl+cmd+i",
    "command": "-workbench.action.chat.open",
    "when": "hasChatProvider"
  },
  { "key": "cmd+r",           "command": "workbench.action.reopenClosedEditor" },
  {
    "key": "cmd+y",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+alt+cmd+i",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "key": "alt+\\",
    "command": "-editor.action.inlineSuggest.trigger",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "key": "ctrl+alt+cmd+/",
    "command": "github.copilot.terminal.explainTerminalSelectionContextMenu"
  },
  {
    "key": "alt+cmd+i",
    "command": "-workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "shift+cmd+u",
    "command": "workbench.panel.chat.view.copilot.toggleVisibility",
    "when": "github.copilot.activated || !github.copilot.activated"
  },
]
